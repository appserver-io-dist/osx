<?xml version="1.0"?>
<!DOCTYPE project>
<project name="appserver-io-dist/osx" basedir="." default="build">

  <!-- Readin enviroment properties to env property -->
  <property environment="env" />

  <!-- Generate a timestamp to time.stamp property -->
  <tstamp>
    <format property="time.stamp" pattern="yyyy-MM-dd_HHmmss"/>
  </tstamp>

  <!-- Readin build property files -->
  <property file="${basedir}/build.properties"/>
  <property file="${basedir}/build.default.properties"/>

  <!-- Set directory properties -->
  <property name="src.dir" value="${basedir}/src" />
  <property name="target.dir" value="${basedir}/target" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="temp.dir" value="/tmp" />

  <!-- ==================================================================== -->
  <!-- Cleans the target and build directories                              -->
  <!-- ==================================================================== -->
  <target name="clean">
    <delete dir="${target.dir}" includeemptydirs="true" quiet="false" verbose="false" failonerror="true"/>
    <delete dir="${build.dir}" includeemptydirs="true" quiet="false" verbose="false" failonerror="true"/>
  </target>

  <!-- ==================================================================== -->
  <!-- Prepares the build environment                                       -->
  <!-- ==================================================================== -->
  <target name="prepare" depends="clean">
    <mkdir dir="${target.dir}" />
    <mkdir dir="${build.dir}" />
  </target>

  <!-- ==================================================================== -->
  <!-- Copies source files to target dir and expand properties              -->
  <!-- ==================================================================== -->
  <target name="copy" depends="prepare">
    <copy todir="${target.dir}" preservelastmodified="true" overwrite="true">
      <fileset dir="${src.dir}">
        <include name="**/*" />
      </fileset>
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
  </target>

  <!-- ==================================================================== -->
  <!-- Installs composer in target directory                                -->
  <!-- ==================================================================== -->
  <target name="install-composer">
    <get src="https://getcomposer.org/installer" dest="${temp.dir}/composer-installer" />
    <exec dir="${temp.dir}" executable="php">
      <arg value="composer-installer" />
    </exec>
  </target>

  <!-- ==================================================================== -->
  <!-- Prepares the appserver sources                                       -->
  <!-- ==================================================================== -->
  <target name="prepare-appserver-src">
    <!-- install local composer -->
    <antcall target="install-composer" />
    <!-- get appserver sources in specific version -->
    <get src="${appserver.src.url}" dest="${temp.dir}/appserver-src-${appserver.src.version}.zip" />
    <!-- unzip to target dir -->
    <unzip src="${temp.dir}/appserver-src-${appserver.src.version}.zip" dest="${target.dir}" />
    <!-- install dependencies via composer and let postinstall-scripts proceed -->
    <exec dir="${target.dir}/appserver-${appserver.src.version}" executable="php">
      <arg line="${temp.dir}/composer.phar install --prefer-dist --quiet --no-interaction --ignore-platform-reqs"/>
    </exec>
    <!-- deploy example app by putting it into deploy folder of runtime -->
    <get src="${appserver.apps.example.url}" dest="${target.dir}/appserver-${appserver.src.version}/deploy/example.phar" />
    <!-- create the .dodeploy files -->
    <touch file="${target.dir}/appserver-${appserver.src.version}/deploy/example.phar.dodeploy" />
  </target>

  <!-- ==================================================================== -->
  <!-- Creates a .pkg package for the appserver sources                     -->
  <!-- ==================================================================== -->
  <target name="create-appserver-pkg" depends="prepare-appserver-src">
    <!-- make the install scripts executable -->
    <chmod perm="755" dir="${basedir}/scripts" includes="*"/>
    <!-- build sub pkg for osx -->
    <exec dir="${basedir}" executable="pkgbuild">
      <arg value="--root"/>
      <arg value="${target.dir}/appserver-${appserver.src.version}"/>
      <arg value="--scripts"/>
      <arg value="${basedir}/scripts"/>
      <arg value="--install-location"/>
      <arg value="/opt/appserver"/>
      <arg value="--version"/>
      <arg value="${appserver.src.version}"/>
      <arg value="--identifier"/>
      <arg value="com.techdivision.appserver-io.appserver"/>
      <arg value="${build.dir}/appserver-io.appserver-${appserver.src.version}.pkg"/>
    </exec>
  </target>

  <!-- ==================================================================== -->
  <!-- Creates a .pkg package for the appserver runtime                     -->
  <!-- ==================================================================== -->
  <target name="create-runtime-pkg">
    <!-- @todo: download runtime tar.get and build a pkg like appserver-src -->
    <get src="${appserver.runtime.url}" dest="${build.dir}/appserver-io-php.runtime-${appserver.runtime.version}.pkg"/>
    <!-- build sub pkg instead of download it -->
  </target>

  <!-- ==================================================================== -->
  <!-- Creates the distribution package *.mpkg with everything included     -->
  <!-- ==================================================================== -->
  <target name="build" depends="copy">
    <!-- create single pkgs -->
    <antcall target="create-runtime-pkg" />
    <antcall target="create-appserver-pkg" />
    <!-- build pkg for osx -->
    <exec dir="${basedir}" executable="productbuild">
      <arg value="--distribution"/>
      <arg value="${target.dir}/distribution.xml"/>
      <arg value="--package-path"/>
      <arg value="${basedir}/build"/>
      <arg value="--resources"/>
      <arg value="${basedir}/resources"/>
      <arg value="${build.dir}/appserver-io-${appserver.src.version}.mpkg"/>
    </exec>
  </target>

</project>
